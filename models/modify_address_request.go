// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ModifyAddressRequest modify address request
//
// swagger:model ModifyAddressRequest
type ModifyAddressRequest struct {

	// address1
	Address1 string `json:"address1,omitempty"`

	// address2
	Address2 string `json:"address2,omitempty"`

	// city
	// Required: true
	City *string `json:"city"`

	// countrycode
	// Required: true
	Countrycode *string `json:"countrycode"`

	// number
	Number string `json:"number,omitempty"`

	// postcode
	// Required: true
	Postcode *string `json:"postcode"`

	// state
	State string `json:"state,omitempty"`

	// street
	Street string `json:"street,omitempty"`
}

// Validate validates this modify address request
func (m *ModifyAddressRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCountrycode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePostcode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModifyAddressRequest) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("city", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *ModifyAddressRequest) validateCountrycode(formats strfmt.Registry) error {

	if err := validate.Required("countrycode", "body", m.Countrycode); err != nil {
		return err
	}

	return nil
}

func (m *ModifyAddressRequest) validatePostcode(formats strfmt.Registry) error {

	if err := validate.Required("postcode", "body", m.Postcode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ModifyAddressRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModifyAddressRequest) UnmarshalBinary(b []byte) error {
	var res ModifyAddressRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
