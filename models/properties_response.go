// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PropertiesResponse properties response
//
// swagger:model PropertiesResponse
type PropertiesResponse struct {

	// has dedicated admin area
	HasDedicatedAdminArea *bool `json:"hasDedicatedAdminArea,omitempty"`

	// identity verification required
	IdentityVerificationRequired *bool `json:"identityVerificationRequired,omitempty"`

	// show click2 dial button
	ShowClick2DialButton *bool `json:"showClick2DialButton,omitempty"`

	// show display single line option
	ShowDisplaySingleLineOption *bool `json:"showDisplaySingleLineOption,omitempty"`

	// show e sim options
	ShowESimOptions *bool `json:"showESimOptions,omitempty"`

	// show event time to live hint
	ShowEventTimeToLiveHint *bool `json:"showEventTimeToLiveHint,omitempty"`

	// show netto prices
	ShowNettoPrices *bool `json:"showNettoPrices,omitempty"`

	// show register dnd option
	ShowRegisterDndOption *bool `json:"showRegisterDndOption,omitempty"`

	// show sim relevant options
	ShowSimRelevantOptions *bool `json:"showSimRelevantOptions,omitempty"`

	// show sip credentials
	ShowSipCredentials *bool `json:"showSipCredentials,omitempty"`

	// show verification letter
	ShowVerificationLetter *bool `json:"showVerificationLetter,omitempty"`

	// verification letter code required
	VerificationLetterCodeRequired *bool `json:"verificationLetterCodeRequired,omitempty"`
}

// Validate validates this properties response
func (m *PropertiesResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PropertiesResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PropertiesResponse) UnmarshalBinary(b []byte) error {
	var res PropertiesResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
