// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountResponse account response
//
// swagger:model AccountResponse
type AccountResponse struct {

	// company
	Company string `json:"company,omitempty"`

	// history life time
	// Enum: [NONE THIRTY_DAYS UNLIMITED]
	HistoryLifeTime string `json:"historyLifeTime,omitempty"`

	// logo Url
	LogoURL string `json:"logoUrl,omitempty"`

	// main product type
	// Enum: [AFFILIATE BASIC CLINQ SATELLITE SIMQUADRAT TEAM TRUNKING FORMER_AFFILIATE FORMER_BASIC FORMER_SATELLITE FORMER_SIMQUADRAT FORMER_TEAM FORMER_TRUNKING UNKNOWN]
	MainProductType string `json:"mainProductType,omitempty"`

	// verified
	Verified *bool `json:"verified,omitempty"`
}

// Validate validates this account response
func (m *AccountResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHistoryLifeTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMainProductType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var accountResponseTypeHistoryLifeTimePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NONE","THIRTY_DAYS","UNLIMITED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountResponseTypeHistoryLifeTimePropEnum = append(accountResponseTypeHistoryLifeTimePropEnum, v)
	}
}

const (

	// AccountResponseHistoryLifeTimeNONE captures enum value "NONE"
	AccountResponseHistoryLifeTimeNONE string = "NONE"

	// AccountResponseHistoryLifeTimeTHIRTYDAYS captures enum value "THIRTY_DAYS"
	AccountResponseHistoryLifeTimeTHIRTYDAYS string = "THIRTY_DAYS"

	// AccountResponseHistoryLifeTimeUNLIMITED captures enum value "UNLIMITED"
	AccountResponseHistoryLifeTimeUNLIMITED string = "UNLIMITED"
)

// prop value enum
func (m *AccountResponse) validateHistoryLifeTimeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, accountResponseTypeHistoryLifeTimePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AccountResponse) validateHistoryLifeTime(formats strfmt.Registry) error {

	if swag.IsZero(m.HistoryLifeTime) { // not required
		return nil
	}

	// value enum
	if err := m.validateHistoryLifeTimeEnum("historyLifeTime", "body", m.HistoryLifeTime); err != nil {
		return err
	}

	return nil
}

var accountResponseTypeMainProductTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AFFILIATE","BASIC","CLINQ","SATELLITE","SIMQUADRAT","TEAM","TRUNKING","FORMER_AFFILIATE","FORMER_BASIC","FORMER_SATELLITE","FORMER_SIMQUADRAT","FORMER_TEAM","FORMER_TRUNKING","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountResponseTypeMainProductTypePropEnum = append(accountResponseTypeMainProductTypePropEnum, v)
	}
}

const (

	// AccountResponseMainProductTypeAFFILIATE captures enum value "AFFILIATE"
	AccountResponseMainProductTypeAFFILIATE string = "AFFILIATE"

	// AccountResponseMainProductTypeBASIC captures enum value "BASIC"
	AccountResponseMainProductTypeBASIC string = "BASIC"

	// AccountResponseMainProductTypeCLINQ captures enum value "CLINQ"
	AccountResponseMainProductTypeCLINQ string = "CLINQ"

	// AccountResponseMainProductTypeSATELLITE captures enum value "SATELLITE"
	AccountResponseMainProductTypeSATELLITE string = "SATELLITE"

	// AccountResponseMainProductTypeSIMQUADRAT captures enum value "SIMQUADRAT"
	AccountResponseMainProductTypeSIMQUADRAT string = "SIMQUADRAT"

	// AccountResponseMainProductTypeTEAM captures enum value "TEAM"
	AccountResponseMainProductTypeTEAM string = "TEAM"

	// AccountResponseMainProductTypeTRUNKING captures enum value "TRUNKING"
	AccountResponseMainProductTypeTRUNKING string = "TRUNKING"

	// AccountResponseMainProductTypeFORMERAFFILIATE captures enum value "FORMER_AFFILIATE"
	AccountResponseMainProductTypeFORMERAFFILIATE string = "FORMER_AFFILIATE"

	// AccountResponseMainProductTypeFORMERBASIC captures enum value "FORMER_BASIC"
	AccountResponseMainProductTypeFORMERBASIC string = "FORMER_BASIC"

	// AccountResponseMainProductTypeFORMERSATELLITE captures enum value "FORMER_SATELLITE"
	AccountResponseMainProductTypeFORMERSATELLITE string = "FORMER_SATELLITE"

	// AccountResponseMainProductTypeFORMERSIMQUADRAT captures enum value "FORMER_SIMQUADRAT"
	AccountResponseMainProductTypeFORMERSIMQUADRAT string = "FORMER_SIMQUADRAT"

	// AccountResponseMainProductTypeFORMERTEAM captures enum value "FORMER_TEAM"
	AccountResponseMainProductTypeFORMERTEAM string = "FORMER_TEAM"

	// AccountResponseMainProductTypeFORMERTRUNKING captures enum value "FORMER_TRUNKING"
	AccountResponseMainProductTypeFORMERTRUNKING string = "FORMER_TRUNKING"

	// AccountResponseMainProductTypeUNKNOWN captures enum value "UNKNOWN"
	AccountResponseMainProductTypeUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (m *AccountResponse) validateMainProductTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, accountResponseTypeMainProductTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AccountResponse) validateMainProductType(formats strfmt.Registry) error {

	if swag.IsZero(m.MainProductType) { // not required
		return nil
	}

	// value enum
	if err := m.validateMainProductTypeEnum("mainProductType", "body", m.MainProductType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountResponse) UnmarshalBinary(b []byte) error {
	var res AccountResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
