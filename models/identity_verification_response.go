// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IdentityVerificationResponse identity verification response
//
// swagger:model IdentityVerificationResponse
type IdentityVerificationResponse struct {

	// external reference Id
	ExternalReferenceID string `json:"externalReferenceId,omitempty"`

	// external transaction number
	ExternalTransactionNumber string `json:"externalTransactionNumber,omitempty"`

	// external verification link
	ExternalVerificationLink string `json:"externalVerificationLink,omitempty"`

	// state
	// Enum: [SUCCESS PENDING FAILED]
	State string `json:"state,omitempty"`
}

// Validate validates this identity verification response
func (m *IdentityVerificationResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var identityVerificationResponseTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SUCCESS","PENDING","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		identityVerificationResponseTypeStatePropEnum = append(identityVerificationResponseTypeStatePropEnum, v)
	}
}

const (

	// IdentityVerificationResponseStateSUCCESS captures enum value "SUCCESS"
	IdentityVerificationResponseStateSUCCESS string = "SUCCESS"

	// IdentityVerificationResponseStatePENDING captures enum value "PENDING"
	IdentityVerificationResponseStatePENDING string = "PENDING"

	// IdentityVerificationResponseStateFAILED captures enum value "FAILED"
	IdentityVerificationResponseStateFAILED string = "FAILED"
)

// prop value enum
func (m *IdentityVerificationResponse) validateStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, identityVerificationResponseTypeStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *IdentityVerificationResponse) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("state", "body", m.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IdentityVerificationResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IdentityVerificationResponse) UnmarshalBinary(b []byte) error {
	var res IdentityVerificationResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
