// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CallSmsTarget call sms target
//
// swagger:model CallSmsTarget
type CallSmsTarget struct {

	// cause
	// Enum: [MISSED SUCCESSFUL]
	Cause string `json:"cause,omitempty"`

	// direction
	// Enum: [INCOMING OUTGOING]
	Direction string `json:"direction,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// number
	Number string `json:"number,omitempty"`
}

// Validate validates this call sms target
func (m *CallSmsTarget) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCause(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDirection(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var callSmsTargetTypeCausePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MISSED","SUCCESSFUL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		callSmsTargetTypeCausePropEnum = append(callSmsTargetTypeCausePropEnum, v)
	}
}

const (

	// CallSmsTargetCauseMISSED captures enum value "MISSED"
	CallSmsTargetCauseMISSED string = "MISSED"

	// CallSmsTargetCauseSUCCESSFUL captures enum value "SUCCESSFUL"
	CallSmsTargetCauseSUCCESSFUL string = "SUCCESSFUL"
)

// prop value enum
func (m *CallSmsTarget) validateCauseEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, callSmsTargetTypeCausePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CallSmsTarget) validateCause(formats strfmt.Registry) error {

	if swag.IsZero(m.Cause) { // not required
		return nil
	}

	// value enum
	if err := m.validateCauseEnum("cause", "body", m.Cause); err != nil {
		return err
	}

	return nil
}

var callSmsTargetTypeDirectionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["INCOMING","OUTGOING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		callSmsTargetTypeDirectionPropEnum = append(callSmsTargetTypeDirectionPropEnum, v)
	}
}

const (

	// CallSmsTargetDirectionINCOMING captures enum value "INCOMING"
	CallSmsTargetDirectionINCOMING string = "INCOMING"

	// CallSmsTargetDirectionOUTGOING captures enum value "OUTGOING"
	CallSmsTargetDirectionOUTGOING string = "OUTGOING"
)

// prop value enum
func (m *CallSmsTarget) validateDirectionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, callSmsTargetTypeDirectionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *CallSmsTarget) validateDirection(formats strfmt.Registry) error {

	if swag.IsZero(m.Direction) { // not required
		return nil
	}

	// value enum
	if err := m.validateDirectionEnum("direction", "body", m.Direction); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CallSmsTarget) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CallSmsTarget) UnmarshalBinary(b []byte) error {
	var res CallSmsTarget
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
