// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SetSipgateIoAccountSettingsRequest set sipgate io account settings request
//
// swagger:model SetSipgateIoAccountSettingsRequest
type SetSipgateIoAccountSettingsRequest struct {

	// incoming Url
	// Required: true
	IncomingURL *string `json:"incomingUrl"`

	// log
	Log *bool `json:"log,omitempty"`

	// outgoing Url
	// Required: true
	OutgoingURL *string `json:"outgoingUrl"`

	// whitelist
	Whitelist []string `json:"whitelist"`
}

// Validate validates this set sipgate io account settings request
func (m *SetSipgateIoAccountSettingsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIncomingURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOutgoingURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SetSipgateIoAccountSettingsRequest) validateIncomingURL(formats strfmt.Registry) error {

	if err := validate.Required("incomingUrl", "body", m.IncomingURL); err != nil {
		return err
	}

	return nil
}

func (m *SetSipgateIoAccountSettingsRequest) validateOutgoingURL(formats strfmt.Registry) error {

	if err := validate.Required("outgoingUrl", "body", m.OutgoingURL); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *SetSipgateIoAccountSettingsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SetSipgateIoAccountSettingsRequest) UnmarshalBinary(b []byte) error {
	var res SetSipgateIoAccountSettingsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
