// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/kben/sipgate-rest-api/models"
)

// NewRequestPasswordResetParams creates a new RequestPasswordResetParams object
// with the default values initialized.
func NewRequestPasswordResetParams() *RequestPasswordResetParams {
	var ()
	return &RequestPasswordResetParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRequestPasswordResetParamsWithTimeout creates a new RequestPasswordResetParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRequestPasswordResetParamsWithTimeout(timeout time.Duration) *RequestPasswordResetParams {
	var ()
	return &RequestPasswordResetParams{

		timeout: timeout,
	}
}

// NewRequestPasswordResetParamsWithContext creates a new RequestPasswordResetParams object
// with the default values initialized, and the ability to set a context for a request
func NewRequestPasswordResetParamsWithContext(ctx context.Context) *RequestPasswordResetParams {
	var ()
	return &RequestPasswordResetParams{

		Context: ctx,
	}
}

// NewRequestPasswordResetParamsWithHTTPClient creates a new RequestPasswordResetParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRequestPasswordResetParamsWithHTTPClient(client *http.Client) *RequestPasswordResetParams {
	var ()
	return &RequestPasswordResetParams{
		HTTPClient: client,
	}
}

/*RequestPasswordResetParams contains all the parameters to send to the API endpoint
for the request password reset operation typically these are written to a http.Request
*/
type RequestPasswordResetParams struct {

	/*Body*/
	Body *models.RequestPasswordResetRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the request password reset params
func (o *RequestPasswordResetParams) WithTimeout(timeout time.Duration) *RequestPasswordResetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the request password reset params
func (o *RequestPasswordResetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the request password reset params
func (o *RequestPasswordResetParams) WithContext(ctx context.Context) *RequestPasswordResetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the request password reset params
func (o *RequestPasswordResetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the request password reset params
func (o *RequestPasswordResetParams) WithHTTPClient(client *http.Client) *RequestPasswordResetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the request password reset params
func (o *RequestPasswordResetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the request password reset params
func (o *RequestPasswordResetParams) WithBody(body *models.RequestPasswordResetRequest) *RequestPasswordResetParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the request password reset params
func (o *RequestPasswordResetParams) SetBody(body *models.RequestPasswordResetRequest) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *RequestPasswordResetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
