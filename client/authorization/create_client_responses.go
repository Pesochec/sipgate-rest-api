// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/kben/sipgate-rest-api/models"
)

// CreateClientReader is a Reader for the CreateClient structure.
type CreateClientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateClientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateClientOK creates a CreateClientOK with default headers values
func NewCreateClientOK() *CreateClientOK {
	return &CreateClientOK{}
}

/*CreateClientOK handles this case with default header values.

Success
*/
type CreateClientOK struct {
	Payload *models.OAuthClient
}

func (o *CreateClientOK) Error() string {
	return fmt.Sprintf("[POST /authorization/oauth2/clients][%d] createClientOK  %+v", 200, o.Payload)
}

func (o *CreateClientOK) GetPayload() *models.OAuthClient {
	return o.Payload
}

func (o *CreateClientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OAuthClient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateClientBody create client body
swagger:model CreateClientBody
*/
type CreateClientBody struct {

	// Short description of the application the client is intended to use with
	// Required: true
	Description *string `json:"description"`

	// Name of the application the client is intended to use with
	// Required: true
	Name *string `json:"name"`

	// The privacy policy URL
	// Required: true
	PrivacyURL *string `json:"privacyUrl"`

	// Valid URI pattern a browser can redirect to after a successful login or logout (simple wildcards are allowed e.g. 'http://example.com/*')
	// Required: true
	RedirectUris []string `json:"redirectUris"`

	// The terms and conditions URL
	// Required: true
	TermsURL *string `json:"termsUrl"`

	// Allowed CORS origins (simple wildcards are allowed e.g. 'http://*.example.com')
	// Required: true
	WebOrigins []string `json:"webOrigins"`
}

// Validate validates this create client body
func (o *CreateClientBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePrivacyURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRedirectUris(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTermsURL(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWebOrigins(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateClientBody) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"description", "body", o.Description); err != nil {
		return err
	}

	return nil
}

func (o *CreateClientBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *CreateClientBody) validatePrivacyURL(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"privacyUrl", "body", o.PrivacyURL); err != nil {
		return err
	}

	return nil
}

func (o *CreateClientBody) validateRedirectUris(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"redirectUris", "body", o.RedirectUris); err != nil {
		return err
	}

	return nil
}

func (o *CreateClientBody) validateTermsURL(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"termsUrl", "body", o.TermsURL); err != nil {
		return err
	}

	return nil
}

func (o *CreateClientBody) validateWebOrigins(formats strfmt.Registry) error {

	if err := validate.Required("client"+"."+"webOrigins", "body", o.WebOrigins); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateClientBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateClientBody) UnmarshalBinary(b []byte) error {
	var res CreateClientBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
