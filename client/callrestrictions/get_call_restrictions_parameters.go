// Code generated by go-swagger; DO NOT EDIT.

package callrestrictions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetCallRestrictionsParams creates a new GetCallRestrictionsParams object
// with the default values initialized.
func NewGetCallRestrictionsParams() *GetCallRestrictionsParams {
	var ()
	return &GetCallRestrictionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCallRestrictionsParamsWithTimeout creates a new GetCallRestrictionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCallRestrictionsParamsWithTimeout(timeout time.Duration) *GetCallRestrictionsParams {
	var ()
	return &GetCallRestrictionsParams{

		timeout: timeout,
	}
}

// NewGetCallRestrictionsParamsWithContext creates a new GetCallRestrictionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCallRestrictionsParamsWithContext(ctx context.Context) *GetCallRestrictionsParams {
	var ()
	return &GetCallRestrictionsParams{

		Context: ctx,
	}
}

// NewGetCallRestrictionsParamsWithHTTPClient creates a new GetCallRestrictionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCallRestrictionsParamsWithHTTPClient(client *http.Client) *GetCallRestrictionsParams {
	var ()
	return &GetCallRestrictionsParams{
		HTTPClient: client,
	}
}

/*GetCallRestrictionsParams contains all the parameters to send to the API endpoint
for the get call restrictions operation typically these are written to a http.Request
*/
type GetCallRestrictionsParams struct {

	/*UserIds
	  List of extensions

	*/
	UserIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get call restrictions params
func (o *GetCallRestrictionsParams) WithTimeout(timeout time.Duration) *GetCallRestrictionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get call restrictions params
func (o *GetCallRestrictionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get call restrictions params
func (o *GetCallRestrictionsParams) WithContext(ctx context.Context) *GetCallRestrictionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get call restrictions params
func (o *GetCallRestrictionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get call restrictions params
func (o *GetCallRestrictionsParams) WithHTTPClient(client *http.Client) *GetCallRestrictionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get call restrictions params
func (o *GetCallRestrictionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserIds adds the userIds to the get call restrictions params
func (o *GetCallRestrictionsParams) WithUserIds(userIds []string) *GetCallRestrictionsParams {
	o.SetUserIds(userIds)
	return o
}

// SetUserIds adds the userIds to the get call restrictions params
func (o *GetCallRestrictionsParams) SetUserIds(userIds []string) {
	o.UserIds = userIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetCallRestrictionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesUserIds := o.UserIds

	joinedUserIds := swag.JoinByFormat(valuesUserIds, "multi")
	// query array param userIds
	if err := r.SetQueryParam("userIds", joinedUserIds...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
