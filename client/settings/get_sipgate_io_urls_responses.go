// Code generated by go-swagger; DO NOT EDIT.

package settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/sipgate-rest-api/models"
)

// GetSipgateIoUrlsReader is a Reader for the GetSipgateIoUrls structure.
type GetSipgateIoUrlsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSipgateIoUrlsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSipgateIoUrlsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetSipgateIoUrlsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSipgateIoUrlsOK creates a GetSipgateIoUrlsOK with default headers values
func NewGetSipgateIoUrlsOK() *GetSipgateIoUrlsOK {
	return &GetSipgateIoUrlsOK{}
}

/*GetSipgateIoUrlsOK handles this case with default header values.

successful operation
*/
type GetSipgateIoUrlsOK struct {
	Payload *models.SipgateIoURLResponse
}

func (o *GetSipgateIoUrlsOK) Error() string {
	return fmt.Sprintf("[GET /settings/sipgateio][%d] getSipgateIoUrlsOK  %+v", 200, o.Payload)
}

func (o *GetSipgateIoUrlsOK) GetPayload() *models.SipgateIoURLResponse {
	return o.Payload
}

func (o *GetSipgateIoUrlsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SipgateIoURLResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSipgateIoUrlsForbidden creates a GetSipgateIoUrlsForbidden with default headers values
func NewGetSipgateIoUrlsForbidden() *GetSipgateIoUrlsForbidden {
	return &GetSipgateIoUrlsForbidden{}
}

/*GetSipgateIoUrlsForbidden handles this case with default header values.

sipgate.io feature not booked
*/
type GetSipgateIoUrlsForbidden struct {
}

func (o *GetSipgateIoUrlsForbidden) Error() string {
	return fmt.Sprintf("[GET /settings/sipgateio][%d] getSipgateIoUrlsForbidden ", 403)
}

func (o *GetSipgateIoUrlsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
