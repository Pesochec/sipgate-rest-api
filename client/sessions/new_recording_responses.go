// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/sipgate-rest-api/models"
)

// NewRecordingReader is a Reader for the NewRecording structure.
type NewRecordingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NewRecordingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNewRecordingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNewRecordingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewNewRecordingPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNewRecordingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNewRecordingOK creates a NewRecordingOK with default headers values
func NewNewRecordingOK() *NewRecordingOK {
	return &NewRecordingOK{}
}

/*NewRecordingOK handles this case with default header values.

successful operation
*/
type NewRecordingOK struct {
	Payload *models.InitiateNewCallSessionResponse
}

func (o *NewRecordingOK) Error() string {
	return fmt.Sprintf("[POST /sessions/voicemail/recording][%d] newRecordingOK  %+v", 200, o.Payload)
}

func (o *NewRecordingOK) GetPayload() *models.InitiateNewCallSessionResponse {
	return o.Payload
}

func (o *NewRecordingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InitiateNewCallSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewRecordingBadRequest creates a NewRecordingBadRequest with default headers values
func NewNewRecordingBadRequest() *NewRecordingBadRequest {
	return &NewRecordingBadRequest{}
}

/*NewRecordingBadRequest handles this case with default header values.

User supplied invalid callee number<br>User supplied invalid caller number<br>DeviceId is required if caller is a phone number
*/
type NewRecordingBadRequest struct {
}

func (o *NewRecordingBadRequest) Error() string {
	return fmt.Sprintf("[POST /sessions/voicemail/recording][%d] newRecordingBadRequest ", 400)
}

func (o *NewRecordingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewRecordingPaymentRequired creates a NewRecordingPaymentRequired with default headers values
func NewNewRecordingPaymentRequired() *NewRecordingPaymentRequired {
	return &NewRecordingPaymentRequired{}
}

/*NewRecordingPaymentRequired handles this case with default header values.

Insufficient funds
*/
type NewRecordingPaymentRequired struct {
}

func (o *NewRecordingPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /sessions/voicemail/recording][%d] newRecordingPaymentRequired ", 402)
}

func (o *NewRecordingPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewRecordingForbidden creates a NewRecordingForbidden with default headers values
func NewNewRecordingForbidden() *NewRecordingForbidden {
	return &NewRecordingForbidden{}
}

/*NewRecordingForbidden handles this case with default header values.

User is not allowed to initiate call with given parameters
*/
type NewRecordingForbidden struct {
}

func (o *NewRecordingForbidden) Error() string {
	return fmt.Sprintf("[POST /sessions/voicemail/recording][%d] newRecordingForbidden ", 403)
}

func (o *NewRecordingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
