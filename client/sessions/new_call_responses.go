// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/sipgate-rest-api/models"
)

// NewCallReader is a Reader for the NewCall structure.
type NewCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NewCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNewCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNewCallBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewNewCallPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNewCallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNewCallOK creates a NewCallOK with default headers values
func NewNewCallOK() *NewCallOK {
	return &NewCallOK{}
}

/*NewCallOK handles this case with default header values.

successful operation
*/
type NewCallOK struct {
	Payload *models.InitiateNewCallSessionResponse
}

func (o *NewCallOK) Error() string {
	return fmt.Sprintf("[POST /sessions/calls][%d] newCallOK  %+v", 200, o.Payload)
}

func (o *NewCallOK) GetPayload() *models.InitiateNewCallSessionResponse {
	return o.Payload
}

func (o *NewCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InitiateNewCallSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewCallBadRequest creates a NewCallBadRequest with default headers values
func NewNewCallBadRequest() *NewCallBadRequest {
	return &NewCallBadRequest{}
}

/*NewCallBadRequest handles this case with default header values.

User supplied invalid callee number<br>User supplied invalid caller number<br>DeviceId is required if caller is a phone number
*/
type NewCallBadRequest struct {
}

func (o *NewCallBadRequest) Error() string {
	return fmt.Sprintf("[POST /sessions/calls][%d] newCallBadRequest ", 400)
}

func (o *NewCallBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewCallPaymentRequired creates a NewCallPaymentRequired with default headers values
func NewNewCallPaymentRequired() *NewCallPaymentRequired {
	return &NewCallPaymentRequired{}
}

/*NewCallPaymentRequired handles this case with default header values.

Insufficient funds
*/
type NewCallPaymentRequired struct {
}

func (o *NewCallPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /sessions/calls][%d] newCallPaymentRequired ", 402)
}

func (o *NewCallPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewCallForbidden creates a NewCallForbidden with default headers values
func NewNewCallForbidden() *NewCallForbidden {
	return &NewCallForbidden{}
}

/*NewCallForbidden handles this case with default header values.

User is not allowed to initiate call with given parameters
*/
type NewCallForbidden struct {
}

func (o *NewCallForbidden) Error() string {
	return fmt.Sprintf("[POST /sessions/calls][%d] newCallForbidden ", 403)
}

func (o *NewCallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
