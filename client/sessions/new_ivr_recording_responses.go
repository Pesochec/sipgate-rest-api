// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kben/sipgate-rest-api/models"
)

// NewIvrRecordingReader is a Reader for the NewIvrRecording structure.
type NewIvrRecordingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NewIvrRecordingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNewIvrRecordingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNewIvrRecordingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewNewIvrRecordingPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNewIvrRecordingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNewIvrRecordingOK creates a NewIvrRecordingOK with default headers values
func NewNewIvrRecordingOK() *NewIvrRecordingOK {
	return &NewIvrRecordingOK{}
}

/*NewIvrRecordingOK handles this case with default header values.

successful operation
*/
type NewIvrRecordingOK struct {
	Payload *models.InitiateNewCallSessionResponse
}

func (o *NewIvrRecordingOK) Error() string {
	return fmt.Sprintf("[POST /sessions/ivr/recording][%d] newIvrRecordingOK  %+v", 200, o.Payload)
}

func (o *NewIvrRecordingOK) GetPayload() *models.InitiateNewCallSessionResponse {
	return o.Payload
}

func (o *NewIvrRecordingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InitiateNewCallSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNewIvrRecordingBadRequest creates a NewIvrRecordingBadRequest with default headers values
func NewNewIvrRecordingBadRequest() *NewIvrRecordingBadRequest {
	return &NewIvrRecordingBadRequest{}
}

/*NewIvrRecordingBadRequest handles this case with default header values.

User supplied invalid callee number<br>User supplied invalid caller number<br>DeviceId is required if caller is a phone number
*/
type NewIvrRecordingBadRequest struct {
}

func (o *NewIvrRecordingBadRequest) Error() string {
	return fmt.Sprintf("[POST /sessions/ivr/recording][%d] newIvrRecordingBadRequest ", 400)
}

func (o *NewIvrRecordingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewIvrRecordingPaymentRequired creates a NewIvrRecordingPaymentRequired with default headers values
func NewNewIvrRecordingPaymentRequired() *NewIvrRecordingPaymentRequired {
	return &NewIvrRecordingPaymentRequired{}
}

/*NewIvrRecordingPaymentRequired handles this case with default header values.

Insufficient funds
*/
type NewIvrRecordingPaymentRequired struct {
}

func (o *NewIvrRecordingPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /sessions/ivr/recording][%d] newIvrRecordingPaymentRequired ", 402)
}

func (o *NewIvrRecordingPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNewIvrRecordingForbidden creates a NewIvrRecordingForbidden with default headers values
func NewNewIvrRecordingForbidden() *NewIvrRecordingForbidden {
	return &NewIvrRecordingForbidden{}
}

/*NewIvrRecordingForbidden handles this case with default header values.

User is not allowed to initiate call with given parameters
*/
type NewIvrRecordingForbidden struct {
}

func (o *NewIvrRecordingForbidden) Error() string {
	return fmt.Sprintf("[POST /sessions/ivr/recording][%d] newIvrRecordingForbidden ", 403)
}

func (o *NewIvrRecordingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
