// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetGroupFaxlineCallerIDParams creates a new GetGroupFaxlineCallerIDParams object
// with the default values initialized.
func NewGetGroupFaxlineCallerIDParams() *GetGroupFaxlineCallerIDParams {
	var ()
	return &GetGroupFaxlineCallerIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetGroupFaxlineCallerIDParamsWithTimeout creates a new GetGroupFaxlineCallerIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetGroupFaxlineCallerIDParamsWithTimeout(timeout time.Duration) *GetGroupFaxlineCallerIDParams {
	var ()
	return &GetGroupFaxlineCallerIDParams{

		timeout: timeout,
	}
}

// NewGetGroupFaxlineCallerIDParamsWithContext creates a new GetGroupFaxlineCallerIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetGroupFaxlineCallerIDParamsWithContext(ctx context.Context) *GetGroupFaxlineCallerIDParams {
	var ()
	return &GetGroupFaxlineCallerIDParams{

		Context: ctx,
	}
}

// NewGetGroupFaxlineCallerIDParamsWithHTTPClient creates a new GetGroupFaxlineCallerIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetGroupFaxlineCallerIDParamsWithHTTPClient(client *http.Client) *GetGroupFaxlineCallerIDParams {
	var ()
	return &GetGroupFaxlineCallerIDParams{
		HTTPClient: client,
	}
}

/*GetGroupFaxlineCallerIDParams contains all the parameters to send to the API endpoint
for the get group faxline caller Id operation typically these are written to a http.Request
*/
type GetGroupFaxlineCallerIDParams struct {

	/*FaxlineID
	  The unique fax line identifier

	*/
	FaxlineID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) WithTimeout(timeout time.Duration) *GetGroupFaxlineCallerIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) WithContext(ctx context.Context) *GetGroupFaxlineCallerIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) WithHTTPClient(client *http.Client) *GetGroupFaxlineCallerIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFaxlineID adds the faxlineID to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) WithFaxlineID(faxlineID string) *GetGroupFaxlineCallerIDParams {
	o.SetFaxlineID(faxlineID)
	return o
}

// SetFaxlineID adds the faxlineId to the get group faxline caller Id params
func (o *GetGroupFaxlineCallerIDParams) SetFaxlineID(faxlineID string) {
	o.FaxlineID = faxlineID
}

// WriteToRequest writes these params to a swagger request
func (o *GetGroupFaxlineCallerIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param faxlineId
	if err := r.SetPathParam("faxlineId", o.FaxlineID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
